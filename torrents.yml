version: "3"
services:
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    user: 0:0
    depends_on:
      - jackett
      - qbittorrent
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/Berlin
      - UMASK_SET=0777
    volumes:
      - /mnt/docker-volumes/sonarr-config:/config
      - /mnt/nextcloud/louis/files/Medien/Serien:/tv
      - /mnt/nextcloud/louis/files/Downloads:/downloads
    ports:
    - target: 8989
      published: 8989
      mode: host
    restart: unless-stopped
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    user: 0:0
    depends_on:
      - jackett
      - qbittorrent
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/Berlin
      - UMASK_SET=0777
    volumes:
      - /mnt/docker-volumes/radarr-config:/config
      - /mnt/nextcloud/louis/files/Medien/Filme:/movies
      - /mnt/nextcloud/louis/files/Downloads:/downloads
    ports:
    - target: 7878
      published: 7878
      mode: host
    restart: unless-stopped
  jackett:
    image: lscr.io/linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
      - AUTO_UPDATE=true
    volumes:
      - /mnt/docker-volumes/jackett-config:/config
      - /mnt/docker-volumes/jackett-downloads:/downloads
    ports:
    - target: 9117
      published: 9117
      mode: host
    restart: unless-stopped
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
      - WEBUI_PORT=8080
    volumes:
      - /mnt/docker-volumes/qbittorrent-config:/config
      - /mnt/nextcloud/louis/files/Downloads:/downloads
    ports:
    - target: 8080
      published: 8080
      mode: host
    restart: unless-stopped
  jellyseerr:
    image: fallenbagel/jellyseerr
    container_name: jellyseerr
    depends_on:
      - sonarr
      - radarr
      - jellyfin
    environment:
      - LOG_LEVEL=debug
      - TZ=Europe/Berlin
    ports:
    - target: 5055
      published: 5055
      mode: host
    volumes:
      - /mnt/docker-volumes/jellyseerr-config:/app/config
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.jellyseerr.rule=Host(`jellyseerr.louis45.de`)"
      - "traefik.http.routers.jellyseerr.entrypoints=websecure"
      - "traefik.http.routers.jellyseerr.tls=true"
    networks:
      - traefik-public
  bazarr:
    image: lscr.io/linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/Berlin
    volumes:
      - /mnt/docker-volumes/bazarr-config:/config
      - /mnt/nextcloud/louis/files/Medien/Filme:/movies
      - /mnt/nextcloud/louis/files/Medien/Serien:/tv
    ports:
    - target: 6767
      published: 6767
      mode: host
    restart: unless-stopped
  tdarr:
    container_name: tdarr
    image: ghcr.io/haveagitgat/tdarr
    ports:
    - target: 8265
      published: 8265
      mode: host
    - target: 8266
      published: 8266
      mode: host
    - target: 8267
      published: 8267
      mode: host
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/Berlin
      - UMASK_SET=002
      - serverIP=192.168.178.188
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      - nodeID=InternalNode
    volumes:
      - /mnt/docker-volumes/tdarr-server:/app/server
      - /mnt/docker-volumes/tdarr-configs:/app/configs
      - /mnt/docker-volumes/tdarr-logs:/app/logs
      - /mnt/docker-volumes/tdarr-media:/media
      - /tdarr-temp:/temp
      - /mnt/nextcloud/louis/files/Medien/Filme:/home/Tdarr/Media/Movies
      - /mnt/nextcloud/louis/files/Medien/Serien:/home/Tdarr/Media/TVShows
      - /mnt/nextcloud/louis/files/Fotos:/home/Tdarr/Media/Nextcloud/Fotos
      - /mnt/nextcloud/louis/files/InstantUpload:/home/Tdarr/Media/Nextcloud/InstantUpload
      - /mnt/nextcloud/louis/files/Medien/Tdarr-Samples:/app/server/Tdarr/Samples
    restart: unless-stopped
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
  readarr:
    image: linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/Berlin
    volumes:
      - /mnt/docker-volumes/readarr-config:/config
      - /mnt/nextcloud/louis/files/Medien/Bücher:/books
      - /mnt/nextcloud/louis/files/Medien/Hörbücher:/spokenBooks
      - /mnt/nextcloud/louis/files/Downloads:/downloads
    ports:
    - target: 8787
      published: 8787
      mode: host
    restart: unless-stopped
  plex:
    image: lscr.io/linuxserver/plex
    container_name: plex
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/Berlin
      - VERSION=docker
    volumes:
      - /mnt/docker-volumes/plex-config:/config
      - /mnt/nextcloud/louis/files/Medien/Serien:/tv
      - /mnt/nextcloud/louis/files/Medien/Filme:/movies
    ports:
    - target: 32400
      published: 32400
      mode: host
    - target: 1900
      published: 1900
      protocol: udp
      mode: host
    - target: 3005
      published: 3005
      mode: host
    - target: 5353
      published: 5353
      protocol: udp
      mode: host
    - target: 8324
      published: 8324
      mode: host
    - target: 32410
      published: 32410
      protocol: udp
      mode: host
    - target: 32412
      published: 32412
      protocol: udp
      mode: host
    - target: 32413
      published: 32413
      protocol: udp
      mode: host
    - target: 32414
      published: 32414
      protocol: udp
      mode: host
    - target: 32469
      published: 32469
      mode: host
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.plex.rule=Host(`plex.louis45.de`)"
      - "traefik.http.routers.plex.entrypoints=websecure"
      - "traefik.http.routers.plex.tls=true"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
    networks:
      - traefik-public
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    volumes:
      - /mnt/docker-volumes/jellyfin-config:/config
      - /mnt/docker-volumes/jellyfin-cache:/cache
      - /mnt/nextcloud/louis/files/Medien:/media
    ports:
    - target: 8096
      published: 8096
      mode: host
    - target: 1900
      published: 11900
      protocol: udp
      mode: host
    - target: 7359
      published: 7359
      protocol: udp
      mode: host
    restart: unless-stopped
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.louis45.de`)"
      - "traefik.http.routers.jellyfin.entrypoints=websecure"
      - "traefik.http.routers.jellyfin.tls=true"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
    networks:
      - traefik-public
  kavita:
    image: kizaing/kavita
    container_name: kavita
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/Berlin
    volumes:
      - /mnt/docker-volumes/kativa-config:/kavita/config
      - /mnt/nextcloud/louis/files/Medien/Bücher:/books
    ports:
    - target: 5000
      published: 5000
      mode: host
    restart: unless-stopped
networks:
  traefik-public:
    external: true
